Debugging:declare_variable called -- create new var #a# with type 1
ID  > IDDim 
Debugging:declare_variable called -- create new var #b# with type 1
ID  > IDDim 
Debugging:declare_variable called -- create new var #c# with type 1
ID  > IDDim 
Debugging:declare_variable called -- create new var #i# with type 1
ID  > IDDim 
IDDim  > IDDList 
IDDim  IDDList   > IDDList 
IDDim  IDDList   > IDDList 
IDDim  IDDList   > IDDList 
Type IDDList > VarDec 
VarDec > VarDecs 
VarDecs > Dec 
No > DecList 
Dec And DecList > DecList 
-- open brace
Exp > IDD 
IDD > lvalue 
IntNumber > Exp 
--Debugging:constant_check called
lvalue '=' Exp > Exp 
Exp > Stmt  
Exp > IDD 
IDD > lvalue 
IntNumber > Exp 
--Debugging:constant_check called
lvalue '=' Exp > Exp 
Exp > Stmt  
Exp > IDD 
IDD > lvalue 
IntNumber > Exp 
--Debugging:constant_check called
lvalue '=' Exp > Exp 
Exp > Stmt  
Exp > IDD 
IDD > lvalue 
lvalue > Exp 
LESSOREQ > Logic 
IntNumber > Exp 
Exp Logic Exp > Exp 
-- open brace
Exp > IDD 
IDD > lvalue 
Exp > IDD 
IDD > lvalue 
lvalue > Exp 
ADD > Aop 
Exp > IDD 
IDD > lvalue 
lvalue > Exp 
Exp Aop Exp > Exp 
--Debugging:constant_check called
lvalue '=' Exp > Exp 
Exp > Stmt  
Exp > IDD 
IDD > lvalue 
Exp > IDD 
IDD > lvalue 
lvalue > Exp 
--Debugging:constant_check called
lvalue '=' Exp > Exp 
Exp > Stmt  
Exp > IDD 
IDD > lvalue 
Exp > IDD 
IDD > lvalue 
lvalue > Exp 
--Debugging:constant_check called
lvalue '=' Exp > Exp 
Exp > Stmt  
Exp > IDD 
IDD > lvalue 
Exp > IDD 
IDD > lvalue 
lvalue > Exp 
ADD > Aop 
IntNumber > Exp 
Exp Aop Exp > Exp 
--Debugging:constant_check called
lvalue '=' Exp > Exp 
Exp > Stmt  
 > SList  
Stmt ';' SList > SList  
Stmt ';' SList > SList  
Stmt ';' SList > SList  
Stmt ';' SList > SList  
-- close brace
'{' SList '} > Block 
WHILE Exp DO Block > Stmt  
 > SList  
Stmt ';' SList > SList  
Stmt ';' SList > SList  
Stmt ';' SList > SList  
Stmt ';' SList > SList  
-- close brace
program ID > program 
